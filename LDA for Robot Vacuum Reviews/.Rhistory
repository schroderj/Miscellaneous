remove.packages("topicmodels")
remove.packages("tm")
remove.packages("xlsx")
install.packages("xlsx"); install.packages("tm"); install.packages("topicmodels")
library(xlsx); library(tm); library(topicmodels)
setwd("~/Dropbox/LDA for Robot Vacuum Reviews")
roomba_880 = read.xlsx("HP_RobotVacuum_AmazonReviews_2.xlsx",sheetName="Roomba_880",stringsAsFactors=FALSE)
roomba_880 = paste(roomba_880$Title,roomba_880$Review)
corpus = Corpus(VectorSource(roomba_880))
DocumentTermMatrix(corpus)
corpus = tm_map(corpus,content_transfomer(tolower))
corpus = Corpus(VectorSource(roomba_880))
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
corpus = tm_map(corpus,content_transfomer(tolower))
corpus = tm_map(corpus,content_transfomer(tolower),lazy=TRUE)
corpus = tm_map(corpus,removePunctuation,lazy=TRUE)
corpus = tm_map(corpus,stripWhitespace,lazy=TRUE)
DocumentTermMatrix(corpus)
getTransformations()
corpus = Corpus(VectorSource(roomba_880))
DocumentTermMatrix(corpus)
DocumentTermMatrix(corpus)
corpus
corpus = Corpus(VectorSource(roomba_880))
corpus
summary(corpus)
corpus = tm_map(corpus,content_transfomer(tolower),lazy=TRUE)
corpus
summary(corpus)
corpus = Corpus(VectorSource(roomba_880))
corpus = tm_map(corpus,content_transfomer(tolower))
corpus = Corpus(VectorSource(roomba_880))
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
corpus = tm_map(corpus,content_transfomer(tolower))
corpus = Corpus(VectorSource(roomba_880))
summary(corpus)
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
summary(corpus)
corpus = tm_map(corpus,content_transfomer(tolower))
summary(corpus)
corpus = tm_map(corpus,PlainTextDocument)
summary(corpus)
corpus = tm_map(corpus,removePunctuation)
corpus = tm_map(corpus,PlainTextDocument)
corpus = tm_map(corpus,content_transfomer(tolower))
summary(corpus)
corpus = Corpus(VectorSource(roomba_880))
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
corpus = tm_map(corpus,content_transfomer(tolower))
corpus = tm_map(corpus,PlainTextDocument)
corpus = tm_map(corpus,removePunctuation)
corpus = tm_map(corpus,stripWhitespace,lazy=TRUE)
DocumentTermMatrix(corpus)
summary(corpus)
dtm = DocumentTermMatrix(corpus)
dtm
class(dtm)
inspect(dtm)
inspect(dtm[1:5,1:10])
dtm
corpus = Corpus(VectorSource(roomba_880))
dtm = DocumentTermMatrix(corpus)
dtm
inspect(dtm[1:5,1:5])
inspect(dtm[1:15,1:20])
str(dtm)
corpus = Corpus(VectorSource(roomba_880))
corpus = tm_map(corpus,removePunctuation)
dtm = DocumentTermMatrix(corpus)
inspect(dtm[1:15,1:20])
corpus = Corpus(VectorSource(roomba_880))
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
dtm = DocumentTermMatrix(corpus)
getReaders()
?readXML
?readPlain
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus)
inspect(corpus[1:10])
inspect(corpus[1:5])
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
inspect(corpus[1:5])
corpus = tm_map(corpus,content_transfomer(tolower))
inspect(corpus[1:5])
corpus = tm_map(corpus,PlainTextDocument)
inspect(corpus[1:5])
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:5])
corpus = tm_map(corpus,removePunctuation)
inspect(corpus[1:5])
corpus = tm_map(corpus,stripWhitespace,lazy=TRUE)
inspect(corpus[1:5])
corpus[[1]]
meta(corpus[[1]], "id")
corpus = Corpus(VectorSource(roomba_880))
meta(corpus[[1]],"id")
meta(corpus[[1]])
corpus[[1]]
writeLines(as.character(corpus[[1]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = tm_map(corpus,removePunctuation)
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = tm_map(corpus,stripWhitespace,lazy=TRUE)
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
getTransformations()
corpus = tm_map(corpus,tolower)
inspect(corpus[1:5])
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = tm_map(corpus,tolower)
?tolower()
?gsub()
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = tm_map(corpus,content_transfomer(tolower))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = Corpus(VectorSource(roomba_880))
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
writeLines(as.character(corpus[[1]]))
inspect(corpus[1:5])
corpus = tm_map(corpus,content_transfomer(tolower))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
stopwords('english')
stopwords('smart')
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = tm_map(corpus,content_transfomer(tolower),lazy=TRUE)
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = Corpus(VectorSource(roomba_880))
corpus = tm_map(corpus,content_transfomer(tolower))
roomba_880 = read.xlsx("HP_RobotVacuum_AmazonReviews_2.xlsx",sheetName="Roomba_880",stringsAsFactors=FALSE)
roomba_880 = paste(roomba_880$Title,roomba_880$Review)
roomba_880
?tolower
roomba_880[1]
tolower(roomba_880[1])
str(roomba_880[1])
str(tolower(roomba_880[1]))
str(roomba_880)
?lapply
test = lapply(roomba_880,tolower)
test <- roomba_880
for (i in 1:1200) {
test[i] = tolower(roomba_880[i])
}
i
roomba_880[929]
roomba_880[928]
getTransformations()
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:5])
corpus = tm_map(corpus,content_transformer(function(x) iconv('UTF-8-MAC', sub = "byte")))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
library(xlsx); library(tm); library(topicmodels)
setwd("~/Dropbox/LDA for Robot Vacuum Reviews")
roomba_880 = read.xlsx("HP_RobotVacuum_AmazonReviews_2.xlsx",sheetName="Roomba_880",stringsAsFactors=FALSE)
roomba_880 = paste(roomba_880$Title,roomba_880$Review)
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv('UTF-8-MAC', sub = "byte")))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
test = sapply(roomba_880, function(x) iconv(enc2utf8(x), sub = "byte"))
test[1]
roombs[989]
roomba_880[989]
roomba_880[987]
roomba_880[986]
roomba_880[988]
for (i in 1:1200) {
test[i] = tolower(roomba_880[i])
}
i
roomba_880[928]
test = sapply(roomba_880, function(x) iconv(enc2utf8(x), sub = "byte"))
test[928]
test = sapply(roomba_880, function(x) iconv('UTF-8-MAC', sub = "byte"))
roomba_880[928]
test[928]
test = sapply(roomba_880, function(x) iconv('UTF-8-MAC'(x), sub = "byte"))
test = sapply(roomba_880, function(x) iconv(x, to='UTF-8-MAC', sub = "byte"))
roomba_880[928]
test[928]
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub = "byte")))
inspect(corpus[1:5])
writeLines(as.character(corpus[[1]]))
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:3])
writeLines(as.character(corpus[[928]]))
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:3])
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub = "byte")))
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transfomer(tolower))
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:3])
inspect(corpus[928])
inspect(corpus[[928]])
inspect(corpus[1:3])
inspect(corpus[1:2])
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub = "byte")))
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub = "byte")))
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, 'UTF-8', 'ASCII')))
writeLines(as.character(corpus[[928]]))
corpus = Corpus(VectorSource(roomba_880))
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub = "byte")))
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, 'UTF-8', 'ASCII')))
writeLines(as.character(corpus[[928]]))
?Encoding
corpus = Corpus(VectorSource(roomba_880))
inspect(corpus[1:2])
writeLines(as.character(corpus[[928]]))
roomba_880[928]
corpus = tm_map(corpus,content_transformer(function(x) iconv(enc2utf8(x), sub = "byte")))
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub = "byte")))
writeLines(as.character(corpus[[928]]))
?iconv
inconvlist()
iconvlist()
corpus = Corpus(VectorSource(roomba_880))
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub = "byte")))
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, to='UTF8-MAC', sub = "byte")))
writeLines(as.character(corpus[[928]]))
corpus = Corpus(VectorSource(roomba_880))
writeLines(as.character(corpus[[928]]))
corpus = tm_map(corpus,content_transformer(function(x) iconv(x, to='UTF-8-MAC')))
writeLines(as.character(corpus[[928]]))
